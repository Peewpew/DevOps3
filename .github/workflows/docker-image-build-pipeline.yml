name: Docker Image Build and Push

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger only on version tags

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Lint Dockerfile
      - name: Lint Dockerfile
        run: |
          curl -sL https://github.com/hadolint/hadolint/releases/download/v2.8.0/hadolint-Linux-x86_64 -o /usr/local/bin/hadolint
          chmod +x /usr/local/bin/hadolint
          hadolint Dockerfile

      # Set environment variables (REPO_NAME, IMAGE_NAME, IMAGE_TAG, KUBECONFIG)
      - name: Set Environment Variables
        run: |
          echo "REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "IMAGE_NAME=devops3" >> $GITHUB_ENV
          echo "IMAGE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
          
          # Set up KUBECONFIG environment variable using GitHub secret
          echo "KUBECONFIG=~/.kube/config" >> $GITHUB_ENV
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

      # Ensure Docker is installed
      - name: Check if Docker is installed
        run: |
          if ! docker --version; then
            echo "Docker is not installed. Please manually install Docker to proceed."
          else
            echo "Docker is installed."
          fi

      # Ensure kubectl is installed
      - name: Check if kubectl is installed
        run: |
          if ! kubectl version --client; then
            echo "kubectl is not installed. Please manually install kubectl to proceed."
          else
            echo "kubectl is installed."
          fi

      # Ensure minikube is installed
      - name: Check if minikube is installed
        run: |
          if ! minikube version; then
            echo "minikube is not installed. Please manually install minikube to proceed."
          else
            echo "minikube is installed."
          fi

      # Ensure Ansible is installed
      - name: Check if Ansible is installed
        run: |
          if ! ansible --version; then
            echo "Ansible is not installed. Please manually install Ansible to proceed."
          else
            echo "Ansible is installed."
          fi

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      # Build Docker image with dynamic naming
      - name: Build Docker Image
        run: |
          docker build --no-cache -t ghcr.io/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG . 
          docker images  # Verify the image

      # Push Docker image to GHCR
      - name: Push Docker Image to GHCR
        run: |
          docker push ghcr.io/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG

      # Trigger Kubernetes deployment with the new image
      - name: Deploy Docker Image to Kubernetes using Ansible Playbook
        run: |
          ansible-playbook deploy-playbook.yml
        env:
          GITHUB_REF: ${{ github.ref }}  # Pass the version tag to the Ansible playbook
          IMAGE_TAG: ${{ github.ref }}  # Pass the image tag to the playbook for Kubernetes update
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}  # Pass the KUBECONFIG as an environment variable
